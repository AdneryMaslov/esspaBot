from flask import Flask, render_template
from flask import request
from flask import Response
import requests
import json
from bs4 import BeautifulSoup as BS
import random
import os

TOKEN = "6631871232:AAFqp5DD7n1vTw6agij3UUR_XAFy7US6D2c"
TOKEN_YANDEX = "cd6b7193-b438-4b24-9d25-15f8a2a86c17"
app = Flask(__name__, template_folder='../public_html')

colors = {
    '–∫—Ä–∞—Å–Ω—ã–π': '–∑–µ–ª–µ–Ω—ã–π',
    '–∫—Ä–∞—Å–Ω—ã–π': '–∑–µ–ª—ë–Ω—ã–π'
}


def dress_up_photo_maker(chat_id, weather):
    temp = ''
    if weather > 10:
        temp = 'warm'
    else:
        temp = 'cold'
    global_path = f'/home/s/semyon2b/botesspa/public_html/{chat_id}/{temp}/up'
    all_path = os.listdir(global_path)
    file = random.choice(all_path)
    file = f'{chat_id}/{temp}/up/{file}'
    return file


def dress_down_photo_maker(chat_id, weather):
    temp = ''
    if weather > 10:
        temp = 'warm'
    else:
        temp = 'cold'
    global_path = f'/home/s/semyon2b/botesspa/public_html/{chat_id}/{temp}/down'
    all_path = os.listdir(global_path)
    file = random.choice(all_path)
    file = f'{chat_id}/{temp}/down/{file}'
    return file


def tel_send_photos(chat_id, url_photo):
    url = f'https://api.telegram.org/bot{TOKEN}/sendPhoto'
    photo = url_photo
    payload = {
        'chat_id': chat_id,
        'photo': f"https://botesspa.ru/{url_photo}",
        'caption': "BotEsspa"
    }
    r = requests.post(url, json=payload)
    return r


def get_location(chat_id):
    global_path = f'/home/s/semyon2b/botesspa/public_html/{chat_id}'
    all_path = os.listdir(global_path)
    for i in all_path:
        if 'latitude' in i:
            return eval(i)
    return 0, 0


def tel_parse_message(msg):
    chat_id = msg['message']['chat']['id']
    if 'photo' in msg['message']:
        file_id = msg['message']['photo'][2]['file_id']
        txt = 0
        location = 0
    elif 'text' in msg['message']:
        txt = msg['message']['text']
        file_id = 0
        location = 0
    else:
        location = msg['message']['location']
        file_id = 0
        txt = 0
    return chat_id, txt, file_id, location


def tel_send_message(chat_id, text):
    url = f'https://api.telegram.org/bot{TOKEN}/sendMessage'
    payload = {
        'chat_id': chat_id,
        'text': text
    }
    r = requests.post(url, json=payload)
    return r


def tel_inlineurl_start(chat_id):
    url = f'https://api.telegram.org/bot{TOKEN}/sendMessage'
    payload = {
        'chat_id': chat_id,
        'text': "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –¥–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è!üëã \n –ú–µ–Ω—è –∑–æ–≤—É—Ç Your Designer Bot, –∏ —Å–æ –º–Ω–æ–π —É –≤–∞—Å –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç –≤–æ–∑–Ω–∏–∫–∞—Ç—å –≤–æ–ø—Ä–æ—Å–æ–≤, —á—Ç–æ –±—ã –Ω–∞–¥–µ—Ç—å —Å–µ–≥–æ–¥–Ω—è. –Ø –±—É–¥—É –≤–∞—à–∏–º –ª–∏—á–Ω—ã–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º –ø–æ –ø–æ–¥–±–æ—Ä—É –æ–¥–µ–∂–¥—ã, –∏—Å—Ö–æ–¥—è —Ç–æ–ª—å–∫–æ –∏–∑ –≤–∞—à–µ–≥–æ –≥–∞—Ä–¥–µ—Ä–æ–±–∞.üíÅ‚Äç‚ôÄÔ∏è \n –í—Å–µ, —á—Ç–æ –≤–∞–º –±—É–¥–µ—Ç –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å, —ç—Ç–æ —Ç–æ–ª—å–∫–æ –ø—Ä–∏—Å–ª–∞—Ç—å –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤–∞—à–µ–π –æ–¥–µ–∂–¥—ã, –≤—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥ –∏ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è, –∞ –¥–∞–ª—å—à–µ –≤—Å—é —Ä–∞–±–æ—Ç—É —Å–¥–µ–ª–∞—é —è! \n –ü—Ä–∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –≤–∞—à–µ–≥–æ –Ω–∞—Ä—è–¥–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è —è –±—É–¥—É —É—á–∏—Ç—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ, –∏, –∫–æ–Ω–µ—á–Ω–æ, –≥—Ä–∞–º–æ—Ç–Ω–æ —Å–æ—á–µ—Ç–∞—Ç—å —Ü–≤–µ—Ç–∞ –¥–ª—è —Å–∞–º–æ–≥–æ —É–¥–∞—á–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞.üíó \n –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º!",
        'reply_markup': {
            "keyboard":
                [[{"text": "–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–±–æ –º–Ω–µüôå"}],
                 [{"request_location": True, "text": "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≥–µ–æ–ø–æ–∑–∏—Ü–∏–µ–πüìç"}]]}}
    r = requests.post(url, json=payload)
    return r


def tel_inlineurl_look(chat_id):
    url = f'https://api.telegram.org/bot{TOKEN}/sendMessage'
    payload = {
        'chat_id': chat_id,
        'text': "–¢–µ–ø–µ—Ä—å —è –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω—è—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤–∞—à–µ–π –æ–¥–µ–∂–¥—ã, –ø—Ä–∏—Å—ã–ª–∞–π—Ç–µ –ø–æ –æ–¥–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.Ô∏è",
        'reply_markup': {
            "keyboard":
                [[{"text": "–Ø –æ—Ç–ø—Ä–∞–≤–∏–ª –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏."}],
                 [{"text": "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüì±"}]]}}
    r = requests.post(url, json=payload)
    return r


def tel_inlineurl_final_look(chat_id):
    url = f'https://api.telegram.org/bot{TOKEN}/sendMessage'
    payload = {
        'chat_id': chat_id,
        'text': "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —è –≥–æ—Ç–æ–≤ –ø—Ä–∏—Å–ª–∞—Ç—å –≤–∞–º –≤–∞—à –∏–¥–µ–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–∑ –ø–æ –ø–æ–≥–æ–¥–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è‚ò∫Ô∏èÔ∏è",
        'reply_markup': {
            "keyboard":
                [[{"text": "–û—Ç–ø—Ä–∞–≤—å –≥–æ—Ç–æ–≤—ã–π –æ–±—Ä–∞–∑üëï"}],
                 [{"text": "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüì±"}]]}}
    r = requests.post(url, json=payload)
    return r


def tel_inlineurl_back_to_menu(chat_id):
    url = f'https://api.telegram.org/bot{TOKEN}/sendMessage'
    payload = {
        'chat_id': chat_id,
        'text': "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éÔ∏è",
        'reply_markup': {
            "keyboard":
                [[{"text": "–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–±–æ –º–Ω–µüôå"}],
                 [{"request_location": True, "text": "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≥–µ–æ–ø–æ–∑–∏—Ü–∏–µ–πüìç"}]]}}
    r = requests.post(url, json=payload)
    return r


def tel_send_button(chat_id):
    url = f'https://api.telegram.org/bot{TOKEN}/sendMessage'

    payload = {
        'chat_id': chat_id,
        'text': "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è, –≤ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –ø–æ–ª—É—á–∞—Ç—å –≥–æ—Ç–æ–≤—ã–π –æ–±—Ä–∞–∑:",
        'reply_markup': {
            "keyboard": [[{'text': '6:00'}, {'text': '7:00'}],
                         [{'text': '8:00'}, {'text': '9:00'}],
                         [{'text': '10:00'}, {'text': '11:00'}], [{'text': '12:00'}]]}}
    r = requests.post(url, json=payload)
    return r


def tel_send_inlinebutton(chat_id):
    url = f'https://api.telegram.org/bot{TOKEN}/sendMessage'

    payload = {
        'chat_id': chat_id,
        'text': "What is this?",
        'reply_markup': {
            "inline_keyboard": [[
                {
                    "text": "A",
                    "callback_data": "ic_A"
                },
                {
                    "text": "B",
                    "callback_data": "ic_B"
                }]
            ]
        }
    }
    r = requests.post(url, json=payload)
    return r


def tel_upload_file(file_id):
    url = f'https://api.telegram.org/bot{TOKEN}/getFile?file_id={file_id}'
    a = requests.post(url)
    json_resp = json.loads(a.content)
    file_pathh = json_resp['result']['file_path']

    url_1 = f'https://api.telegram.org/file/bot{TOKEN}/{file_pathh}'
    b = requests.get(url_1)
    file_content = b.content
    with open(f'/home/s/semyon2b/botesspa/public_html/{file_pathh}', "wb") as f:
        f.write(file_content)
        return f'https://botesspa.ru/{file_pathh}'


def search_image_by_url(image_url):
    url = "https://yandex.com/images/search"
    payload = {
        'source': 'collections',
        'rpt': 'imageview',
        'url': image_url
    }
    response = requests.get(url, params=payload)
    html = BS(response.content, 'html.parser')
    for el in html.select('.CbirSection > .Tags > .Tags-Wrapper > .Button2 > .Button2-Text'):
        return el.text


def yandex_weather(location):
    latitude = location['latitude']
    longitude = location['longitude']
    url_yandex = f'https://api.weather.yandex.ru/v2/informers/?lat={latitude}&lon={longitude}&[lang=ru_RU]'
    resp = requests.get(url_yandex, headers={'X-Yandex-API-Key': "cd6b7193-b438-4b24-9d25-15f8a2a86c17"}, verify=False)
    html = resp.json()
    return html.get('fact').get('feels_like')


def make_user(chat_id, location):
    if not os.path.isdir(f"/home/s/semyon2b/botesspa/public_html/{chat_id}/{location}"):
        os.makedirs(f"/home/s/semyon2b/botesspa/public_html/{chat_id}/{location}")
        os.makedirs(f'/home/s/semyon2b/botesspa/public_html/{chat_id}/warm/up')
        os.makedirs(f'/home/s/semyon2b/botesspa/public_html/{chat_id}/warm/down')
        os.makedirs(f'/home/s/semyon2b/botesspa/public_html/{chat_id}/cold/up')
        os.makedirs(f'/home/s/semyon2b/botesspa/public_html/{chat_id}/cold/down')


@app.route('/python-bot/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        msg = request.get_json()
        try:
            chat_id, txt, file_id, location = tel_parse_message(msg)
            if txt != 0:
                if txt == '/start':
                    tel_inlineurl_start(chat_id)
                    tel_send_message(chat_id,
                                     '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π –≤–∞—à–µ–π –≥–µ–æ–ø–æ–∑–∏—Ü–∏–µ–π, —á—Ç–æ–±—ã —è –º–æ–≥ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µüòâ')
                elif txt == '–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –æ–¥–µ–∂–¥—ãüëö':
                    tel_send_message(chat_id,
                                     '–ú—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–∏–Ω—è—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤–∞—à–µ–π –æ–¥–µ–∂–¥—ã, –ø—Ä–∏—Å—ã–ª–∞–π—Ç–µ –ø–æ –æ–¥–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏')
                    tel_inlineurl_look(chat_id)
                elif txt == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüì±":
                    tel_inlineurl_back_to_menu(chat_id)
                elif txt == "–Ø –æ—Ç–ø—Ä–∞–≤–∏–ª –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.":
                    tel_inlineurl_final_look(chat_id)
                elif txt == '–û—Ç–ø—Ä–∞–≤—å –≥–æ—Ç–æ–≤—ã–π –æ–±—Ä–∞–∑üëï':
                    location = get_location(chat_id)
                    weather = yandex_weather(location)
                    url_photo_up = dress_up_photo_maker(chat_id, weather)
                    url_photo_down = dress_down_photo_maker(chat_id, weather)
                    tel_send_photos(chat_id, url_photo_up)
                    tel_send_photos(chat_id, url_photo_down)
                else:
                    tel_send_message(chat_id, '–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é :(')
            elif file_id != 0:
                url_to_photo = tel_upload_file(file_id)
                on_photo = search_image_by_url(url_to_photo)
                tel_send_message(chat_id, on_photo)
            else:
                make_user(chat_id, location)
                weather = yandex_weather(location)
                tel_send_message(chat_id, f"–ü–æ–≥–æ–¥–∞ –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ —Å–µ–π—á–∞—Å –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {weather}¬∞C‚òÄÔ∏è")
                tel_inlineurl_look(chat_id)
        except:
            print("from index-->")
        return Response('ok', status=200)
    else:
        return '<h1>–≠—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞-webhook –¥–ª—è –±–æ—Ç–∞ –Ω–∞ Python, —Ä–∞–∑–º–µ—â–µ–Ω–Ω–æ–≥–æ –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥–µ Beget.</h1>'


@app.route('/', defaults={'path': ''})
@app.route('/<path:path>')
def catch_all(path):
    return render_template('home.html')


if __name__ == '__main__':
    app.run(threaded=True)